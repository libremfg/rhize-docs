<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rhize documentation – Models of work</title><link>https://docs.rhize.com/versions/v3.1.0/isa-95/models-of-work/</link><description>Recent content in Models of work on Rhize documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://docs.rhize.com/versions/v3.1.0/isa-95/models-of-work/index.xml" rel="self" type="application/rss+xml"/><item><title>Process segments</title><link>https://docs.rhize.com/versions/v3.1.0/isa-95/models-of-work/process-segments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.rhize.com/versions/v3.1.0/isa-95/models-of-work/process-segments/</guid><description>
&lt;p&gt;A &lt;em&gt;process segment&lt;/em&gt; is a step that can be shared across processes.
Process segments are flexible information objects,
abstract enough to be shared by multiple procedures,
and coarse-grained enough to be appropriate for business planning and analytics.&lt;/p&gt;
&lt;p&gt;Process segments provide information that is relevant to both &lt;a href="https://docs.rhize.com/versions/v3.1.0/isa-95/how-to-speak-isa-95/#the-levels-of-a-manufacturing-operation" &gt;levels 3 and 4&lt;/a&gt;.
In the manufacturing ontology, the process segment has relationships to diverse other entities, including objects for scheduling, definitions, and work performance.
As such, the proper use of process segments provides much flexibility in how you implement an MOM system for both operational and analytical use cases.&lt;/p&gt;
&lt;figure&gt;&lt;img src="https://docs.rhize.com/images/s95/rhize-s95-p2-p4-high-level-overview-ISA95_P2_P4.svg"
alt="A large overview of the ISA-95 object model"&gt;&lt;figcaption&gt;
&lt;p&gt;A process segment exists in the middle of levels 3 and 4&lt;/p&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2&gt;The scope of a process segment&lt;span class="hx:absolute hx:-mt-20" id="the-scope-of-a-process-segment"&gt;&lt;/span&gt;
&lt;a href="#the-scope-of-a-process-segment" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Process segments can have a &lt;a href="#is-made-up-of" &gt;parent-child hierarchy&lt;/a&gt;.
At higher levels of this hierarchy, the scope of a process segment is often broader than that of a particular product.&lt;/p&gt;
&lt;p&gt;For example, The Juice Factory produces five brands of juice.
While the particular material consumed and produced differs in the production of each brand,
all brands still follow the steps of &lt;code&gt;material receiving&lt;/code&gt;, &lt;code&gt;kitting&lt;/code&gt;, &lt;code&gt;mixing&lt;/code&gt;, and &lt;code&gt;packing&lt;/code&gt;.
These steps are process segments.&lt;/p&gt;
&lt;pre class="mermaid hx:mt-6"&gt;
flowchart LR
a[Material receiving]--&amp;gt;
b[Kitting]--&amp;gt;
c[Mixing]--&amp;gt;
d[packing]
&lt;/pre&gt;&lt;h2&gt;Reasons to use segments&lt;span class="hx:absolute hx:-mt-20" id="reasons-to-use-segments"&gt;&lt;/span&gt;
&lt;a href="#reasons-to-use-segments" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Process segments can serve operational and analytical functions.
Operational functions include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To avoid repetition when modeling steps that are common to different processes.&lt;/li&gt;
&lt;li&gt;To define work from a business-process perspective. More granular entities might define a route of segments to follow in specific situations. For details, read the example in the &lt;a href="#section" &gt;corresponds to&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also use process segments in various analytical functions, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Comparing different product processes that are all derived from a common procedure.
For example, the mixing segment might &lt;a href="#correspond-" &gt;correspond to&lt;/a&gt; to the production of &lt;code&gt;mixed red juice&lt;/code&gt; and &lt;code&gt;mixed blue juice&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Viewing data and parameters for similar steps in a single aggregation.
For example, you might compare the average time of all jobs associated with &lt;code&gt;mixing&lt;/code&gt; against the other segments to find a general process bottleneck.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Segments vs. equipment hierarchies&lt;span class="hx:absolute hx:-mt-20" id="segments-vs-equipment-hierarchies"&gt;&lt;/span&gt;
&lt;a href="#segments-vs-equipment-hierarchies" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Process segments are not necessarily connected to the &lt;a href="https://docs.rhize.com/versions/v3.1.0/isa-95/resources/equipment/#the-role-based-hierarchy" &gt;role-based equipment hierarchy&lt;/a&gt;.
Since a defining aspect of equipment in ISA-95 is that it plays a precise role,
you might wonder whether a process segment is just a needless duplication:
why add a &lt;code&gt;mixing&lt;/code&gt; segment when the &lt;code&gt;mixers&lt;/code&gt; equipment model serves the same role?&lt;/p&gt;
&lt;p&gt;However, the fact that process segments are decoupled from equipment can help you model a variety of conditions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some steps have no equipment requirements. For example, in The Juice Factory, the &lt;code&gt;kitting&lt;/code&gt; process segment requires no equipment.&lt;/li&gt;
&lt;li&gt;Some steps may be common to a number of processes, but each particular process may require a different set of equipment.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Segment relationships&lt;span class="hx:absolute hx:-mt-20" id="segment-relationships"&gt;&lt;/span&gt;
&lt;a href="#segment-relationships" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Process segments have relationships to a number of other work and resource models.&lt;/p&gt;
&lt;h3&gt;Corresponds to&lt;span class="hx:absolute hx:-mt-20" id="corresponds-to"&gt;&lt;/span&gt;
&lt;a href="#corresponds-to" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Operations segments and work masters usually describe a step to create a particular product.
These models may &lt;em&gt;correspond&lt;/em&gt; to a process segment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;From the business perspective, product steps are modeled in &lt;em&gt;operations segments&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;From the more granular MES perspective, product steps are modeled in &lt;em&gt;work masters&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, the Juice Factory has various work masters to produce material definitions for different bulk juices: &lt;code&gt;Bulk blue juice&lt;/code&gt;, &lt;code&gt;Bulk orange juice&lt;/code&gt;, and so on.
Each of these work masters correspond to the same process segment, &lt;code&gt;mixing&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="mermaid hx:mt-6"&gt;
classDiagram
namespace work_masters{
class `Bulk blue juice`
class `Bulk red juice`
class `Bulk orange juice`
}
`Bulk blue juice` ..&amp;gt; `Process segment:&amp;lt;br&amp;gt;mixing` :corresponds to
`Bulk red juice` ..&amp;gt; `Process segment:&amp;lt;br&amp;gt;mixing` :corresponds to
`Bulk orange juice` ..&amp;gt; `Process segment:&amp;lt;br&amp;gt;mixing` :corresponds to
&lt;/pre&gt;&lt;h3&gt;Contains specifications&lt;span class="hx:absolute hx:-mt-20" id="contains-specifications"&gt;&lt;/span&gt;
&lt;a href="#contains-specifications" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A process segment may contain one or more resource &lt;em&gt;specifications&lt;/em&gt;.
These specifications describe the necessary resources for the step.&lt;/p&gt;
&lt;pre class="mermaid hx:mt-6"&gt;
classDiagram
class `bulk juices`{use: produced}
class `ingredient kits`{use: consumed}
mixing *--&amp;gt; `equipment specification` :contains
`equipment specification` ..&amp;gt; `mixers` :corresponds to
mixing *--&amp;gt; `material specification` :contains
`material specification` ..&amp;gt; `bulk juices` :corresponds to
`material specification` ..&amp;gt; `ingredient kits` :corresponds to
&lt;/pre&gt;&lt;h3&gt;Contains segment parameters&lt;span class="hx:absolute hx:-mt-20" id="contains-segment-parameters"&gt;&lt;/span&gt;
&lt;a href="#contains-segment-parameters" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A process segment can &lt;em&gt;contain&lt;/em&gt; process segment parameters.
Process segment parameters store additional information about the step.
For example, the &lt;code&gt;mixing&lt;/code&gt; process segment might have a &lt;code&gt;mixing time&lt;/code&gt; parameter.&lt;/p&gt;
&lt;p&gt;The parameter also can have a value or range of values.
This process segment parameter value may serve as a default for lower-level work models that &lt;a href="#corresponds-to" &gt;correspond to&lt;/a&gt; this process segment.&lt;/p&gt;
&lt;pre class="mermaid hx:mt-6"&gt;
classDiagram
class `mixing time`{
value: 20-30
UoM: minutes
}
class `mixing speed`{
value: 50
UoM: RPM
}
`mixing` *--&amp;gt; `mixing time`
`mixing` *--&amp;gt; `mixing speed`
&lt;/pre&gt;&lt;h3&gt;Is made of&lt;span class="hx:absolute hx:-mt-20" id="is-made-of"&gt;&lt;/span&gt;
&lt;a href="#is-made-of" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A process segment can &lt;em&gt;be made of&lt;/em&gt; other process segments.
You can use this relationship to model sub-steps.&lt;/p&gt;
&lt;p&gt;For example, The Juice Factory might need to distinguish preparation steps from production steps.
A parent segment provides a model to aggregate the production steps in one parent process segment.&lt;/p&gt;
&lt;pre class="mermaid hx:mt-6"&gt;
flowchart LR
subgraph m[Parent: Juice Production]
direction LR
K[Child:&amp;lt;br&amp;gt;kitting] --&amp;gt;
M[Child:&amp;lt;br&amp;gt;mixing] --&amp;gt;
P[Child:&amp;lt;!-- &amp;lt;br&amp;gt; --&amp;gt;packing]
end
A[Material receiving] --&amp;gt; m
classDef box fill:#fff,stroke:#000,stroke-width:1px,color:#000;
classDef b fill:#fff,stroke:#000,stroke-width:1px,color:#000;
class A,C,D,N,X,m,T,V box
&lt;/pre&gt;&lt;h3&gt;Dependency&lt;span class="hx:absolute hx:-mt-20" id="dependency"&gt;&lt;/span&gt;
&lt;a href="#dependency" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;In some instances, you might need to strictly model the order in which some or all steps happen.
For this, use &lt;em&gt;segment dependancies&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Segment dependencies become more important when steps might be executed in parallel or dynamically.
The dependency ensures nothing happens too early.&lt;/p&gt;
&lt;p&gt;If your process segment is independent of a particular product,
ensure that all entities that &lt;a href="#correspond-to" &gt;correspond to&lt;/a&gt; that segment also have that dependency.
For example, in a pastry production, the &lt;code&gt;baking&lt;/code&gt; segment might have a dependency on &lt;code&gt;mixing&lt;/code&gt; and &lt;code&gt;preheating&lt;/code&gt;.
This implies that all products that correspond to this &lt;code&gt;baking&lt;/code&gt;—such as a &lt;code&gt;chocolate chip cookies&lt;/code&gt; or &lt;code&gt;brownies&lt;/code&gt;—must also require &lt;code&gt;mixing&lt;/code&gt; and &lt;code&gt;preheating&lt;/code&gt; as dependencies.&lt;/p&gt;
&lt;pre class="mermaid hx:mt-6"&gt;
classDiagram
baking ..&amp;gt; mixing : has execution dependency on
baking ..&amp;gt; pre-heating : has execution dependency on
&lt;/pre&gt;&lt;p&gt;If a dependency is product-dependent, define it on the level of the &lt;abbr title="A template for a job order, corresponding to an operations and process segment, from the perspective of the level-3 (MES/MOM) systems."&gt;work master&lt;/abbr&gt; or operation definition instead.&lt;/p&gt;</description></item><item><title>Work masters</title><link>https://docs.rhize.com/versions/v3.1.0/isa-95/models-of-work/work-masters/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.rhize.com/versions/v3.1.0/isa-95/models-of-work/work-masters/</guid><description>
&lt;p&gt;A &lt;em&gt;work master&lt;/em&gt; defines the resources and instructions necessary to do a unit of work.
As the most granular work definition in ISA-95, the work master can serve a variety of operational purposes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Define how to create a product from the perspective of a level-3 system&lt;/li&gt;
&lt;li&gt;Provide a reference document that can be cloned and overridden for detailed scheduling and dispatching&lt;/li&gt;
&lt;li&gt;Store recipes and parameters to be downloaded by the PLC&lt;/li&gt;
&lt;li&gt;Contain parameters to derive metrics for KPI calculations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the manufacturing &lt;abbr title="The entities and relationships that represent all knowledge in the domain of manufacturing operations"&gt;ontology&lt;/abbr&gt;, the work master has relationships to resources, other work definitions, and planning entities. Like other work definitions, a work master can be either a &lt;abbr title="Pattern (work definition). A work definition that creates a pattern or template for other patterns or work definitions to follow"&gt;pattern&lt;/abbr&gt;, defining a template for work, or an &lt;abbr title="An identifiable member of a manufacturing class, like a material or process segment, that can be tracked and scheduled"&gt;instance&lt;/abbr&gt;, defining a unit of actual work.&lt;/p&gt;
&lt;h2&gt;Work master attributes&lt;span class="hx:absolute hx:-mt-20" id="work-master-attributes"&gt;&lt;/span&gt;
&lt;a href="#work-master-attributes" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class="mermaid hx:mt-6"&gt;
classDiagram
class workMaster{
id: make.PBJ1000
description: Make Packaged Blue Juice
workType: production
duration: 45 minutes
}
&lt;/pre&gt;&lt;p&gt;Along with relationships described in the following sections, work masters have attributes to identify and qualify the type of work being defined.
Important attributes include:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;ID&lt;/dt&gt;
&lt;dd&gt;A unique ID&lt;/dd&gt;
&lt;dt&gt;Work type&lt;/dt&gt;
&lt;dd&gt;The category of work―one of &lt;code&gt;production&lt;/code&gt;, &lt;code&gt;maintenance&lt;/code&gt;, &lt;code&gt;quality&lt;/code&gt;, or &lt;code&gt;inventory&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;Duration&lt;/dt&gt;
&lt;dd&gt;The expected time needed to perform the work&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2&gt;Contains resources and parameter specifications&lt;span class="hx:absolute hx:-mt-20" id="contains"&gt;&lt;/span&gt;
&lt;a href="#contains" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A work master may have &lt;em&gt;specifications&lt;/em&gt; that link the work master to its required resources and instructions.
In ISA-95 relations, the specification is an intermediary between the work master and the resource or parameter.
The work master &lt;em&gt;contains&lt;/em&gt; the specifications;
the specifications describe the necessary quantities and uses of the resource object that it &lt;em&gt;corresponds to&lt;/em&gt;.&lt;/p&gt;
&lt;pre class="mermaid hx:mt-6"&gt;
classDiagram
class materialSpecification{
what and how much?
}
class personnelSpecification{
who and how many?
}
class equipmentSpecification{
how?
}
class parameterSpecification{
instructions, checklists,
and so on
}
workMaster *--&amp;gt; materialSpecification :contains
workMaster *--&amp;gt; personnelSpecification :contains
workMaster *--&amp;gt; equipmentSpecification :contains
workMaster *--&amp;gt; parameterSpecification :contains
&lt;/pre&gt;&lt;h3&gt;Example: material specifications&lt;span class="hx:absolute hx:-mt-20" id="example-material-specifications"&gt;&lt;/span&gt;
&lt;a href="#example-material-specifications" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Resource specifications may have attributes that describe information about the use, quantity, and location of the resource.
Some specifications, such as material, have additional attributes.&lt;/p&gt;
&lt;p&gt;For example, to produce one pallet of &lt;code&gt;Cosmic Blue Juice&lt;/code&gt;, The Juice Factory requires 5 cases of Blue Juice and one pallet.
The work master to produce this final product specifies three different materials, all of which are used in a different way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Consume 5 units of the &lt;code&gt;blue juice case&lt;/code&gt;, a &lt;abbr title="A representation of material with similar charecteristics. All material lots must have one associated material definition."&gt;material definition&lt;/abbr&gt;&lt;/li&gt;
&lt;li&gt;Produce 1 unit of &lt;code&gt;packed blue juice&lt;/code&gt;, a &lt;abbr title="A representation of material with similar charecteristics. All material lots must have one associated material definition."&gt;material definition&lt;/abbr&gt;&lt;/li&gt;
&lt;li&gt;Use one pallet, a consumable (material that has no &lt;abbr title="A uniquely identifiable amount of material, either countable or weighable"&gt;material lot&lt;/abbr&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="mermaid hx:mt-6"&gt;
classDiagram
class `Work master: Make Cosmic Blue Juice`{
description: procedure to produce pallet of Cosmic Blue Juice
}
class `Specification: blue juice case`{
use: consumed
quantity: 5
quantity_unit_of_measure: juice_case
}
class `Specification: blue juice pallet`{
use: produced
quantity: 1
quantity_unit_of_measure: pallet
}
class `Specification: pallet`{
use: consumable
quantity: 1
quantity_unit_of_measure: pallet
}
class `Material definition: PBJ`{
description: One pallet of cosmic blue juice
}
`Work master: Make Cosmic Blue Juice` *--&amp;gt; `Specification: blue juice case`
`Work master: Make Cosmic Blue Juice` *--&amp;gt; `Specification: blue juice pallet`
`Work master: Make Cosmic Blue Juice` *--&amp;gt; `Specification: pallet`
`Specification: blue juice case` --&amp;gt; `Material definition: PBJ`
`Specification: blue juice pallet` --&amp;gt; `Material definition: blue juice case`
&lt;/pre&gt;&lt;div class="hx:overflow-x-auto hx:mt-6 hx:flex hx:rounded-lg hx:border hx:py-2 hx:ltr:pr-4 hx:rtl:pl-4 hx:contrast-more:border-current hx:contrast-more:dark:border-current hx:border-blue-200 hx:bg-blue-100 hx:text-blue-900 hx:dark:border-blue-200/30 hx:dark:bg-blue-900/30 hx:dark:text-blue-200"&gt;
&lt;div class="hx:ltr:pl-3 hx:ltr:pr-2 hx:rtl:pr-3 hx:rtl:pl-2"&gt;&lt;div class="hx:select-none hx:text-xl" style="font-family: 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';"&gt;ℹ️&lt;/div&gt;&lt;/div&gt;
&lt;div class="hx:w-full hx:min-w-0 hx:leading-7"&gt;
&lt;div class="hx:mt-6 hx:leading-7 hx:first:mt-0"&gt;Note that the preceding diagram includes only the material specification.
The full work master may also contain specifications about the equipment, personnel, parameter specifications, and so on.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Parameter specifications&lt;span class="hx:absolute hx:-mt-20" id="parameter-specifications"&gt;&lt;/span&gt;
&lt;a href="#parameter-specifications" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Parameter specifications detail information that is specific to a work master but not specific to any particular resource.
For example, the production of bulk juice might have a parameter specification called &lt;code&gt;pre-mix checklist&lt;/code&gt; that details a set of steps that the operator must perform before starting the equipment.&lt;/p&gt;
&lt;h2&gt;Relationships to planning models&lt;span class="hx:absolute hx:-mt-20" id="relationships-to-planning-models"&gt;&lt;/span&gt;
&lt;a href="#relationships-to-planning-models" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;As work masters &lt;a href="#contains" &gt;contain&lt;/a&gt; resource requirements and instructions, they also act as a source document for detailed scheduling and dispatching.
Conventionally, work masters are related to job orders through a work directive entity:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The job order says what to make&lt;/li&gt;
&lt;li&gt;The work master provides a canonical definition of how to make it&lt;/li&gt;
&lt;li&gt;The work directive provides a copy of the work master, specific to the particular order&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="mermaid hx:mt-6"&gt;
classDiagram
class jobOrder{
make bulk blue juice
}
class workMaster{
id: WM.Bulk_Blue_Juice
}
class workDirective{
id: WD.Bulk_blue_juice
}
jobOrder --&amp;gt; workDirective :corresponds to
workDirective --&amp;gt; workMaster :derived from
&lt;/pre&gt;&lt;h3&gt;Corresponds to work directive&lt;span class="hx:absolute hx:-mt-20" id="corresponds-to-work-directive"&gt;&lt;/span&gt;
&lt;a href="#corresponds-to-work-directive" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A work directive is a clone of the work master that is made at the time of dispatching.
If the actual work performed needs to deviate from the work defined in the work master,
the work directive provides a way to record the changes in a new definition.&lt;/p&gt;
&lt;p&gt;For example, the work master to &lt;code&gt;make bulk blue juice&lt;/code&gt; might specify sugar from a specific provider.
At the time of production, however, the plant might have only sugar from a different supplier.
In this case, the work directive would override the material specification to reflect the substitute material definition.&lt;/p&gt;
&lt;h2&gt;Relationships to other work masters&lt;span class="hx:absolute hx:-mt-20" id="relationships-to-other-work-masters"&gt;&lt;/span&gt;
&lt;a href="#relationships-to-other-work-masters" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;A work master might have relationships to other work masters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A work master may &lt;em&gt;contain&lt;/em&gt; children work master.&lt;/li&gt;
&lt;li&gt;An &lt;abbr title="An identifiable member of a manufacturing class, like a material or process segment, that can be tracked and scheduled"&gt;instance&lt;/abbr&gt; work master may &lt;em&gt;be defined by&lt;/em&gt; a &lt;em&gt;&lt;abbr title="Pattern (work definition). A work definition that creates a pattern or template for other patterns or work definitions to follow"&gt;pattern&lt;/abbr&gt;&lt;/em&gt; work master.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Parent child-work masters&lt;span class="hx:absolute hx:-mt-20" id="parent"&gt;&lt;/span&gt;
&lt;a href="#parent" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;You can group sub-definitions of a work master using a parent-child relationship.
For example, the work master to &lt;code&gt;make juice&lt;/code&gt; might have child work masters for the production recipe from the quality testing procedure.&lt;/p&gt;
&lt;pre class="mermaid hx:mt-6"&gt;
classDiagram
class `WM: bottle`{
equipment_specifcation: bottler
equipment_specifcation: capper
}
class `WM: quality inspection`{
personnel_specifcation: tester
}
`WM:make juice` *--&amp;gt; `WM: bottle` :contains
`WM:make juice` *--&amp;gt; `WM: quality inspection` :contains
&lt;/pre&gt;&lt;h3&gt;Defined by patterns&lt;span class="hx:absolute hx:-mt-20" id="pattern"&gt;&lt;/span&gt;
&lt;a href="#pattern" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;A &lt;em&gt;pattern&lt;/em&gt; work master provides a template to build &lt;em&gt;instance&lt;/em&gt; work masters for similar production processes.&lt;/p&gt;
&lt;p&gt;For example, to produce bulk juice for all five of its juice lines,
The Juice Factory requires exactly the same equipment and quantity of sugar.
The only item that changes is the material definition for the kits that are dumped into the mixer.&lt;/p&gt;
&lt;p&gt;To minimize configuration, The Juice Factory might use a pattern work master that specifies the equipment, sugar, and kit class.
Then each brand of juice may have an instance work master that overrides the &lt;code&gt;kits&lt;/code&gt; class with its specific kit definition.&lt;/p&gt;
&lt;pre class="mermaid hx:mt-6"&gt;
classDiagram
class patternWorkMaster{
description: make bulk juice
equipment specifications:
- mixers
material specifications:
- 200LB sugar
- 1 kit from kits class
}
class instanceWorkMaster_blue{
- make bulk blue juice
- requires 1 blue kit
}
class instanceWorkMaster_red{
- make bulk red juice
- requires 1 red kit
}
patternWorkMaster --&amp;gt; instanceWorkMaster_blue :defines
patternWorkMaster --&amp;gt; instanceWorkMaster_red :defines
&lt;/pre&gt;&lt;h3&gt;Corresponds to a process segment&lt;span class="hx:absolute hx:-mt-20" id="corresponds-to-a-process-segment"&gt;&lt;/span&gt;
&lt;a href="#corresponds-to-a-process-segment" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Work masters &lt;em&gt;correspond to&lt;/em&gt; &lt;a href="https://docs.rhize.com/versions/v3.1.0/isa-95/models-of-work/process-segments/" &gt;process segments&lt;/a&gt;, which are less granular, business-level definitions of work.
For example, the &lt;code&gt;make juice&lt;/code&gt; process segment might have five corresponding work masters that describe how to produce each line of juice at the level of detail necessary for a manufacturing execution system.&lt;/p&gt;
&lt;pre class="mermaid hx:mt-6"&gt;
classDiagram
namespace process_segment_kitting{
class `WM: make blue juice kit`
class `WM: make red juice kit`
class `WM: make green juice kit`
}
&lt;/pre&gt;&lt;h2&gt;Workflow specifications&lt;span class="hx:absolute hx:-mt-20" id="workflow-specifications"&gt;&lt;/span&gt;
&lt;a href="#workflow-specifications" class="subheading-anchor" aria-label="Permalink for this section"&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The work master may be linked to other work masters in a sequence through a &lt;em&gt;workflow specification&lt;/em&gt;.
The workflow specification provides an overview of the steps to execute masters in sequence.&lt;/p&gt;
&lt;p&gt;Each master can &lt;em&gt;have&lt;/em&gt; a node that exists in the workflow specification.
For example, here are the production steps to make blue juice.
Each node in this workflow might correspond to a work master, with the &lt;code&gt;pack&lt;/code&gt; node being a that corresponds to the &lt;code&gt;pack&lt;/code&gt; &lt;a href="#parent" &gt;parent&lt;/a&gt; work master.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://docs.rhize.com/BPMNs/workflow-spec-make-bulk-blue-juice.png" alt="workflow specification to make blue juice" loading="lazy" /&gt;&lt;/p&gt;</description></item></channel></rss>