<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Connect event data on Rhize documentation</title><link>https://docs.rhize.com/how-to/publish-subscribe/</link><description>Recent content in Connect event data on Rhize documentation</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 29 Apr 2024 11:39:29 +0300</lastBuildDate><atom:link href="https://docs.rhize.com/how-to/publish-subscribe/index.xml" rel="self" type="application/rss+xml"/><item><title>Tutorial: Trigger a workflow from a rule</title><link>https://docs.rhize.com/how-to/publish-subscribe/create-equipment-class-rule/</link><pubDate>Mon, 29 Apr 2024 11:39:29 +0300</pubDate><guid>https://docs.rhize.com/how-to/publish-subscribe/create-equipment-class-rule/</guid><description>&lt;p>An equipment class rule &lt;a href="https://docs.rhize.com/how-to/bpmn/trigger-workflows/">triggers a BPMN&lt;/a> workflow whenever a data source publishes a value that meets a specified threshold.&lt;/p>
&lt;p>Imagine a scenario when an oven must be preheated every time a new order number is published to an MQTT edge device.
You could automate this workflow with a rule that listens to messages published and evaluates a condition.
If the condition evaluates to &lt;code>true&lt;/code>, the rule triggers a &lt;abbr title="Business Process Model and Notation. A standardized graphical notation used to represent business processes in an intuitive, visual way. Rhize&amp;#39;s BPMN UI and engine provides a low-code interface for complex event handling">BPMN&lt;/abbr> workflow to preheat the oven.&lt;/p></description></item><item><title>Connect data source</title><link>https://docs.rhize.com/how-to/publish-subscribe/connect-datasource/</link><pubDate>Fri, 22 Sep 2023 14:50:39 -0300</pubDate><guid>https://docs.rhize.com/how-to/publish-subscribe/connect-datasource/</guid><description>&lt;p>For Rhize to listen to and handle manufacturing events,
you need to connect a &lt;abbr title="A source of real-time data that is collected by the Rhize agent, such as an MQTT or OPC UA device">data source&lt;/abbr>.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>To add a data source, you need the following:&lt;/p>
&lt;ul>
&lt;li>Access to an MQTT or OPC UA server&lt;/li>
&lt;li>Credentials for this server, if necessary&lt;/li>
&lt;li>The URL and connection string for this server (Rhize will point to this)&lt;/li>
&lt;/ul>
&lt;h2 id="steps-to-connect">Steps to connect&lt;/h2>
&lt;p>The process has two sides:&lt;/p></description></item><item><title>Track changes (CDC)</title><link>https://docs.rhize.com/how-to/publish-subscribe/track-changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://docs.rhize.com/how-to/publish-subscribe/track-changes/</guid><description>&lt;p>You can use &lt;em>change data capture&lt;/em> (CDC) to track data changes over time, including
a &lt;abbr title="A GraphQL operation that modifies some data in the database, usually creating, updating, or deleting a resource">mutation&lt;/abbr> or drop in your database.
Rhize&amp;rsquo;s CDC implementation can use
Kafka, NATS, or a local file as a &lt;em>&lt;abbr title="The destination of a data flow.">sink&lt;/abbr>&lt;/em> to store CDC updates streamed by Rhize&amp;rsquo;s Alpha
leader nodes.&lt;/p>
&lt;p>When CDC is enabled, Rhize streams events for:&lt;/p></description></item></channel></rss>